[{"pk": 7, "model": "flatpages.flatpage", "fields": {"registration_required": 0, "title": "Sunlight Labs API", "url": "\/api\/", "template_name": "", "sites": [1], "content": "<h1>Sunlight Labs API<\/h1>\r\n\r\n<h2>About the API<\/h2>\r\n<p>The Sunlight Labs API provides methods for obtaining basic information on Members of Congress, legislator IDs used by various websites, and lookups between places and the politicians that represent them.  The primary purpose of the API is to facilitate mashups involving politicians and the various other APIs that are out there.<\/p>\r\n\r\n<p>Anyone can use the Sunlight Labs API, all it takes is a <a href=\"\/api\/register\/\">15 second sign-up<\/a> so that we can keep track of how many people are using the API and have a way to get in contact with you should there be any changes or API related news.<\/p>\r\n\r\n<br \/><a id=\"register_now\" href=\"\/api\/register\/\">Register for your Sunlight Labs API key now!<\/a><br \/>\r\n\r\nFor details on available methods and how to make use of the API, view the <a href=\"\/api\/docs\/\">Sunlight Labs API Documentation<\/a>.\r\n\r\n<h2>Terms of Service<\/h2>\r\n\r\nUse of the Sunlight Labs API is subject to the following terms:\r\n\r\n<ul>\r\n<li>The Sunlight Foundation\/Sunlight Labs can not be held liable for the accuracy or availability of the service provided and do not make any claims to accuracy, completeness, availability, or any other warranty or guarantee.<\/li>\r\n<li>When using the Sunlight Labs API, attribution is appreciated but not required.  Implication or claim of endorsement is strictly prohibited.<\/li>\r\n<li>Usage of the API depends upon an API key which should only be used by the individual\/organization which requested it.  Sharing or distribution of API keys is not permitted.<\/li>\r\n<li>Usage is currently not limited, but excessive usage is monitored and may be grounds for the termination of service.  If you plan to make heavy use of the Sunlight Labs API please contact us beforehand so we can be sure.<\/li>\r\n<li>Sunlight Labs does not distribute specifics of API usage except in cases where we have obtained your permission, we do however reserve the right to track and publish aggregate statistics on usage.<\/li>\r\n<li>These terms may be modified at any time, users will be notified of any changes via the email address on file.<\/li>\r\n<li>Service may be terminated at any time at the discretion of Sunlight Labs.<\/li>\r\n<\/ul>\r\n\r\n<h2>About the Data<\/h2>\r\n\r\n<p>The data provided by the Sunlight Labs API is kept as up to date as possible, and typically shouldn't lag changes in Congress by more than a week.  The data in the API comes from a variety of sources, to find out specific details about what sources were involved in the data from any given call append the metadata=true option onto the parameters of any function call.  <\/p>\r\n\r\n<h3>Download All Data<\/h3>\r\n\r\n<p>Occasionally we make a dump of all of the data in the API for those users that are best served by a full copy of this data.  If you are making heavy use of the API, particularly in an application that involves pulling in nearly all of the information the API provides it is recommended that you use this archive.<p>\r\n\r\n<ul>\r\n<li><a href=\"\/api\/media\/apidump.csv.gz\">Latest Sunlight Labs API Legislator Dump<\/a> updated June 30th<\/li>\r\n<\/ul>\r\n\r\n<h3>Images of the 110th Congress<\/h3>\r\n\r\n<p>We also have taken the effort to compile all of the images of Members of Congress into an archive.  The following two archives are provided for convenience with images pulled from the <a href=\"http:\/\/www.gpoaccess.gov\/cdirectory\/index.html\">Congressional Directory<\/a>.<\/p>\r\n\r\n<ul>\r\n<li><a href=\"http:\/\/assets.sunlightfoundation.com\/moc\/40x50.zip\">small [40x50]<\/a><\/li>\r\n<li><a href=\"http:\/\/assets.sunlightfoundation.com\/moc\/100x125.zip\">large [100x125]<\/a><\/li>\r\n<\/ul>\r\n\r\n<h2>Historical Information<\/h2>\r\n<p>In 2006 Sunlight Labs launched an API aimed at helping people get their\r\npolitical mashups off the ground.  In the last two years many new\r\nresources have come into creation such as\r\n<a href=\"http:\/\/opencongress.org\">OpenCongress<\/a> and\r\n<a href=\"http:\/\/maplight.org\">MAPLight.org<\/a> and existing sites like\r\n<a href=\"http:\/\/www.votesmart.org\/services_api.php\">Project Vote Smart<\/a>\r\nhave introduced APIs of their own.<\/p>\r\n\r\n<p>In July of 2008, Sunlight Labs launched a major update to the Labs API\r\nthat greatly simplifies usage and reduces the number of calls most users\r\nwill need to make to get the data they want.  While users of the old API may\r\nsee less methods and assume reduced functionality, nearly all of the old\r\nfunctionality is present, but redundant or unnecessary methods have been\r\nremoved.  (Details on transitioning from the old API to the new are\r\navailable in the <a href=\"\/api\/docs\/transition_guide\/\">transition guide<\/a>.)<\/p>", "enable_comments": 0}}, {"pk": 1, "model": "flatpages.flatpage", "fields": {"registration_required": 0, "title": "Sunlight Labs API Documentation", "url": "\/api\/docs\/", "template_name": "", "sites": [1], "content": "<h1>Sunlight Labs API Documentation<\/h1>\r\n\r\n<p>This page provides information on directly interfacing with the Sunlight Labs API, note that all calls require an API key.<\/p>\r\n\r\nIf you don't already have an API key, registration is fast and simple: \r\n\r\n<a id=\"register_now\" href=\"\/api\/register\/\">Register for your Sunlight Labs API key now!<\/a>\r\n\r\n<h2>Technical Information<\/h2>\r\n\r\n<p>The Sunlight Labs API is RESTful and the preferred output format is JSON, although XML is available as well. <\/p>\r\n\r\n<p>The base URL for all calls to the API is http:\/\/services.sunlightlabs.com\/api\/ and calling an API method looks like: \r\n<br \/>\r\n<span class=\"example\">http:\/\/services.sunlightlabs.com\/api\/<span class=\"methodname\">api.method<\/span><span class=\"format\">.format<\/span>?apikey=<span class=\"apikey\">YOUR_API_KEY<\/span>&amp;<span class=\"params\">params<\/span><\/span>\r\n<br \/>\r\n<ul>\r\n<li><span class=\"methodname\">api.method<\/span>: any of the methods listed below.<\/li>\r\n<li><span class=\"format\">.format<\/span>: .xml or .json, if omitted defaults to JSON<\/li>\r\n<li><span class=\"apikey\">YOUR_API_KEY<\/span>: the API key you received when signing up<\/li>\r\n<li><span class=\"params\">params<\/span>: the appropriate parameters to the API method<\/li>\r\n<\/ul>\r\n<\/p>\r\n\r\n<p>All API methods return a JSON or XML container named response that contains the object(s) returned by the appropriate API call.  For detailed output examples view the specific documentation a particular method.<\/p>\r\n\r\n<p>If an error is encountered the HTTP status code will be set to 400 and a plain text string describing the error is returned regardless of output format.  If authentication fails due to a missing or invalid key the HTTP status code 403 is used.<\/p>\r\n\r\n<h2>Methods<\/h2>\r\n\r\nThe Sunlight Labs API currently provides the following methods:\r\n\r\n<h3>Legislator Methods<\/h3>\r\nThese methods relate to US Representatives and Senators, providing basic\r\ncontact information as well as all the various IDs we track for legislators.\r\n<ul>\r\n<li><a href=\"\/api\/docs\/legislators\/\">legislators.get<\/a>: get all information on a single legislator<\/li>\r\n<li><a href=\"\/api\/docs\/legislators\/\">legislators.getList<\/a>: get information on all legislators meeting certain requirements<\/li>\r\n<\/ul>\r\n\r\n<h3>District Methods<\/h3>\r\nThese methods relate to Congressional districts, providing lookups to obtain\r\ndistrict information from a zipcode or latitude and longitude.\r\n<ul>\r\n<li><a href=\"\/api\/docs\/districts-getDistrictsFromZip\/\">districts.getDistrictsFromZip<\/a>: get district(s) that a given zip code falls within<\/li>\r\n<li><a href=\"\/api\/docs\/districts-getZipsFromDistrict\/\">districts.getZipsFromDistrict<\/a>: get zip codes that fall within a given district<\/li>\r\n<li><a href=\"\/api\/docs\/districts-getDistrictFromLatLong\/\">districts.getDistrictFromLatLong<\/a>: get district that contains a location identified by a latitude\/longitude<\/li>\r\n<\/ul>\r\n\r\n<p>More methods are coming soon providing enhanced functionality, the goal in phase one of the new API was to replace the most-used functionality from the original labs API.<\/p>", "enable_comments": 0}}, {"pk": 6, "model": "flatpages.flatpage", "fields": {"registration_required": 0, "title": "Sunlight Labs API: districts.getDistrictFromLatLong", "url": "\/api\/docs\/districts-getDistrictFromLatLong\/", "template_name": "", "sites": [1], "content": "<h1>districts.getDistrictFromLatLong<\/h1>\r\n\r\n<p>districts.getDistrictFromLatLong gets the district that a provided latitude\/longitude pair falls within.<\/p>\r\n\r\n<h2>Parameters<\/h2>\r\n\r\nThere are two required parameters for getDistrictFromLatLong:\r\n<ul>\r\n    <li><strong>latitude<\/strong>: latitude of coordinate<\/li>\r\n    <li><strong>longitude<\/strong>: longitude of coordinate<\/li>\r\n<\/ul>\r\n\r\n<h2>Return Value<\/h2>\r\n\r\nDistricts are returned either in XML or JSON in the format shown below.\r\n\r\n<h2>Errors<\/h2>\r\n\r\nErrors are indicated by setting the HTTP status code to 400 and returning a text string describing the error.  The following errors may be encountered in districts.getZipsFromDistrict:\r\n\r\n<ul>\r\n<li><strong>Missing Parameter<\/strong> - returned if latitude or longitude parameter is not provided<\/li>\r\n<li><strong>Point not within a congressional district<\/strong> - Point does not fall within a congressional district<\/li>\r\n<\/ul>\r\n\r\n<h2>Examples<\/h2>\r\n\r\n<h3>districts.getDistrictFromLatLong.xml?latitude=35.778788&longitude=-78.787805<\/h3>\r\n<pre>\r\n&lt;response&gt;\r\n  &lt;districts&gt;\r\n    &lt;district&gt;\r\n      &lt;state&gt;NC&lt;\/state&gt;\r\n      &lt;number&gt;4&lt;\/number&gt;\r\n    &lt;\/district&gt;\r\n  &lt;\/districts&gt;\r\n&lt;\/response&gt;\r\n<\/pre>\r\n\r\n<h3>districts.getDistrictFromLatLong.json?latitude=35.778788&longitude=-78.787805<\/h3>\r\n<pre>\r\n{\"response\": \r\n    {\"districts\": \r\n        [{\"district\": {\"state\": \"NC\", \"number\": \"4\"}}]\r\n    }\r\n}\r\n<\/pre>\r\n", "enable_comments": 0}}, {"pk": 4, "model": "flatpages.flatpage", "fields": {"registration_required": 0, "title": "Sunlight Labs API: districts.getDistrictFromZip", "url": "\/api\/docs\/districts-getDistrictsFromZip\/", "template_name": "", "sites": [1], "content": "<h1>districts.getDistrictsFromZip<\/h1>\r\n\r\n<p>districts.getDistrictsFromZip gets all districts that overlap the area for a given zip code.<\/p>\r\n\r\n<h2>Parameters<\/h2>\r\n\r\nThe one required parameter for getDistrictsFromZip is 'zip' which should be a valid 5 digit zip code.\r\n\r\n<h2>Return Value<\/h2>\r\n\r\nDistricts are returned either in XML or JSON with all of the fields listed below:\r\n\r\n<h2>Errors<\/h2>\r\n\r\nErrors are indicated by setting the HTTP status code to 400 and returning a text string describing the error.  The following errors may be encountered districts.getDistrictsFromZip:\r\n\r\n<ul>\r\n<li><strong>Missing Parameter<\/strong> - returned if zip parameter is not provided<\/li>\r\n<!--<li><strong>Invalid Parameter<\/strong> - returned if zip parameter is invalid<\/li>-->\r\n<\/ul>\r\n\r\n<h2>Example Calls<\/h2>\r\n\r\n<h3>districts.getDistrictsFromZip.xml?zip=12345<\/h3>\r\n<pre>\r\n&lt;response&gt;\r\n    &lt;districts&gt;\r\n    &lt;district&gt;\r\n        &lt;state&gt;NY&lt;\/state&gt;\r\n        &lt;number&gt;21&lt;\/number&gt;\r\n    &lt;\/district&gt;\r\n    &lt;\/districts&gt;\r\n&lt;\/response&gt;\r\n<\/pre>\r\n\r\n<h3>districts.getDistrictsFromZip?zip=27511<\/h3>\r\n<pre>\r\n{\"response\": \r\n    {\"districts\": [\r\n      {\"district\": {\"state\": \"NC\", \"number\": \"4\"}}, \r\n      {\"district\": {\"state\": \"NC\", \"number\": \"13\"}}\r\n    ]}\r\n}\r\n<\/pre>", "enable_comments": 0}}, {"pk": 5, "model": "flatpages.flatpage", "fields": {"registration_required": 0, "title": "Sunlight Labs API: districts.getZipsFromDistrict", "url": "\/api\/docs\/districts-getZipsFromDistrict\/", "template_name": "", "sites": [1], "content": "<h1>districts.getZipsFromDistrict<\/h1>\r\n\r\n<p>districts.getZipsFromDistrict gets all zips within a given congressional district<\/p>\r\n\r\n<h2>Parameters<\/h2>\r\n\r\nThere are two required parameters for getZipsFromDistrict:\r\n<ul>\r\n    <li><strong>state<\/strong>: 2 letter code for a state<\/li>\r\n    <li><strong>district<\/strong>: number for a district (0 for At-Large)<\/li>\r\n<\/ul>\r\n\r\n<h2>Return Value<\/h2>\r\n\r\nZips are returned either in XML or JSON in the format shown below.\r\n\r\n<h2>Errors<\/h2>\r\n\r\nErrors are indicated by setting the HTTP status code to 400 and returning a text string describing the error.  The following errors may be encountered in districts.getZipsFromDistrict:\r\n\r\n<ul>\r\n<li><strong>Missing Parameter<\/strong> - returned if state or district parameter is not provided<\/li>\r\n<!--<li><strong>Invalid Parameter<\/strong> - returned if zip parameter is invalid<\/li>-->\r\n<\/ul>\r\n\r\n<h2>Examples<\/h2>\r\n\r\n<h3>districts.getZipsFromDistrict.json?state=NY&district=29<\/h3>\r\n<pre>\r\n{\"response\": \r\n {\"zips\": [\"14009\", \"14024\", \"14029\", \"14030\", \"14041\", \"14042\", \"14060\",\r\n \"14065\", \"14070\", \"14081\", \"14101\", \"14129\", \"14133\", \"14138\", \"14141\",\r\n \"14168\", \"14171\", \"14173\", \"14414\", \"14415\", \"14418\", \"14423\", \"14424\",\r\n \"14425\", \"14428\", \"14432\", \"14437\", \"14441\", \"14445\", \"14450\", \"14453\",\r\n \"14456\", \"14461\", \"14463\", \"14466\", \"14467\", \"14469\", \"14471\", \"14472\",\r\n \"14475\", \"14478\", \"14482\", \"14485\", \"14487\", \"14489\", \"14502\", \"14504\",\r\n \"14506\", \"14507\", \"14512\", \"14513\", \"14514\", \"14518\", \"14522\", \"14526\",\r\n \"14527\", \"14529\", \"14532\", \"14534\", \"14536\", \"14543\", \"14544\", \"14546\",\r\n \"14547\", \"14548\", \"14559\", \"14560\", \"14561\", \"14564\", \"14572\", \"14585\",\r\n \"14586\", \"14606\", \"14610\", \"14618\", \"14620\", \"14623\", \"14624\", \"14625\",\r\n \"14706\", \"14707\", \"14708\", \"14709\", \"14711\", \"14714\", \"14715\", \"14717\",\r\n \"14719\", \"14721\", \"14726\", \"14727\", \"14729\", \"14730\", \"14731\", \"14735\",\r\n \"14737\", \"14738\", \"14739\", \"14741\", \"14743\", \"14744\", \"14745\", \"14747\",\r\n \"14748\", \"14751\", \"14753\", \"14754\", \"14755\", \"14760\", \"14766\", \"14770\",\r\n \"14772\", \"14774\", \"14777\", \"14778\", \"14779\", \"14783\", \"14786\", \"14788\",\r\n \"14801\", \"14802\", \"14803\", \"14804\", \"14805\", \"14806\", \"14807\", \"14808\",\r\n \"14809\", \"14810\", \"14812\", \"14813\", \"14814\", \"14815\", \"14816\", \"14818\",\r\n \"14819\", \"14820\", \"14821\", \"14822\", \"14823\", \"14824\", \"14825\", \"14826\",\r\n \"14827\", \"14830\", \"14831\", \"14836\", \"14837\", \"14838\", \"14839\", \"14840\",\r\n \"14841\", \"14842\", \"14843\", \"14844\", \"14845\", \"14846\", \"14855\", \"14856\",\r\n \"14857\", \"14858\", \"14859\", \"14861\", \"14863\", \"14864\", \"14865\", \"14867\",\r\n \"14869\", \"14870\", \"14871\", \"14872\", \"14873\", \"14874\", \"14876\", \"14877\",\r\n \"14878\", \"14879\", \"14880\", \"14884\", \"14885\", \"14886\", \"14887\", \"14889\",\r\n \"14891\", \"14892\", \"14893\", \"14894\", \"14895\", \"14897\", \"14898\", \"14901\",\r\n \"14902\", \"14903\", \"14904\", \"14905\", \"14925\"]}}\r\n<\/pre>", "enable_comments": 0}}, {"pk": 3, "model": "flatpages.flatpage", "fields": {"registration_required": 0, "title": "Sunlight Labs API: Legislator Methods", "url": "\/api\/docs\/legislators\/", "template_name": "", "sites": [1], "content": "<h1>legislators.get &amp; legislators.getList<\/h1>\r\n\r\n<p>Currently the Sunlight Labs API provides two methods for obtaining information about legislators: legislators.get and legislators.getList.  Both of these methods operate in essentially the same way, the main difference being that legislator.get returns a single legislator (or an error if the query would have resulted in multiple legislators) and legislator.getList returns a list of legislators (a list of size one is allowed). In other words, legislator.get is purely a convenience method to avoid dealing with a list of values when only one value is needed.<\/p>\r\n\r\n<h2>Parameters<\/h2>\r\n\r\nOne or more parameters should be provided to a call to legislators.get or legislators.getList.  Any parameters constrain the legislators which are returned, for example state=NY&party=R returns all Republicans from the state of New York whereas lastname=Biden would return any Legislators with the last name Biden.  \r\n\r\n<h2>Return Value<\/h2>\r\n\r\nLegislators are returned either in XML or JSON with all of the fields listed below:\r\n\r\n<h2>Errors<\/h2>\r\n\r\nErrors are indicated by setting the HTTP status code to 400 and returning a text string describing the error.  The following errors may be encountered via legislators.get and legislators.getList:\r\n\r\n<ul>\r\n<li><strong>Multiple Legislators Returned<\/strong> - returned if legislators.get is called with parameters that match more than one legislator<\/li>\r\n<li><strong>Invalid Parameter<\/strong> - returned if a parameter is provided that does not match one of the field names<\/li>\r\n<\/ul>\r\n\r\n<h2>Fields<\/h2>\r\n\r\nThe following fields are both available as parameters and also returned in the Legislator data type:\r\n\r\n<table>\r\n<tr><th>Parameter<\/th><th>Description<\/th><\/tr>\r\n<tr><td>title<\/td><td>Title held by this legislator, either Sen or Rep<\/td><\/tr>\r\n<tr><td>firstname<\/td><td>Legislator's first name<\/td><\/tr>\r\n<tr><td>middlename<\/td><td>Legislator's middle name or initial<\/td><\/tr>\r\n<tr><td>lastname<\/td><td>Legislator's last name<\/td><\/tr>\r\n<tr><td>name_suffix<\/td><td>Legislator's suffix (Jr., III, etc.) <\/td><\/tr>\r\n<tr><td>nickname<\/td><td>Preferred nickname of legislator (if any)<\/td><\/tr>\r\n<tr><td>party<\/td><td>Legislator's political party (D, I, or R)<\/td><\/tr>\r\n<tr><td>state<\/td><td>2 letter abbreviation of legislator's state<\/td><\/tr>\r\n<tr><td>district<\/td><td>If legislator is a representative, their district.  0 is used for At-Large districts<\/td><\/tr>\r\n<tr><td>gender<\/td><td>M or F<\/td><\/tr>\r\n<tr><td>phone<\/td><td>Congressional office phone number<\/td><\/tr>\r\n<tr><td>fax<\/td><td>Congressional office fax number<\/td><\/tr>\r\n<tr><td>website<\/td><td>URL of Congressional website<\/td><\/tr>\r\n<tr><td>webform<\/td><td>URL of web contact form<\/td><\/tr>\r\n<tr><td>email<\/td><td>Legislator's email address (if known)<\/td><\/tr>\r\n<tr><td>congress_office<\/td><td>Legislator's Washington DC Office Address<\/td><\/tr>\r\n<tr><td>bioguide_id<\/td><td>Legislator ID assigned by <a href=\"http:\/\/bioguide.congress.gov\/biosearch\/biosearch.asp\">Congressional Biographical Directory<\/a> (also used by Washington Post)<\/td><\/tr>\r\n<tr><td>votesmart_id<\/td><td>Legislator ID assigned by <a href=\"http:\/\/votesmart.org\">Project Vote Smart<\/a><\/td><\/tr>\r\n<tr><td>fec_id<\/td><td><a href=\"http:\/\/fec.gov\">Federal Election Commission<\/a> ID<\/td><\/tr>\r\n<tr><td>govtrack_id,<\/td><td>ID assigned by <a href=\"http:\/\/govtrack.us\">Govtrack.us<\/a><\/td><\/tr>\r\n<tr><td>crp_id<\/td><td>ID provided by <a href=\"http:\/\/opensecrets.org\">Center for Responsive Politics<\/a><\/td><\/tr>\r\n<tr><td>eventful_id<\/td><td>Performer ID on <a href=\"http:\/\/eventful.com\">eventful.com<\/a><\/td><\/tr>\r\n<tr><td>sunlight_old_id<\/td><td>ID used by deprecated Sunlight Labs API (should not be used except for legacy purposes)<\/td><\/tr>\r\n<tr><td>congresspedia_url\/td><td>URL of Legislator's entry on <a href=\"http:\/\/congresspedia.org\">Congresspedia<\/a><\/td><\/tr>\r\n<\/table>\r\n\r\n<h2>Example Calls<\/h2>\r\n\r\n<h3>legislators.get.json?state=NC&district=4<\/h3>\r\n\r\n<pre>\r\n{\"response\": \r\n{\"legislator\": \r\n{\"district\": \"4\", \r\n\"title\": \"Rep\", \r\n\"eventful_id\": \"P0-001-000016562-5\", \r\n\"state\": \"NC\",\r\n\"votesmart_id\": \"119\", \r\n\"party\": \"D\", \r\n\"email\": \"\", \r\n\"crp_id\": \"N00002260\", \r\n\"website\": \"http:\\\/\\\/price.house.gov\\\/\", \r\n\"fax\": \"202-225-2014\", \r\n\"govtrack_id\": \"400326\", \r\n\"firstname\": \"David\", \r\n\"middlename\": \"Eugene\", \r\n\"lastname\": \"Price\", \r\n\"congress_office\": \"2162 Rayburn House Office Building\", \r\n\"bioguide_id\": \"P000523\", \r\n\"webform\": \"http:\\\/\\\/price.house.gov\\\/contact\\\/contact_form.shtml\",\r\n\"nickname\": \"\", \r\n\"phone\": \"202-225-1784\", \r\n\"fec_id\": \"H6NC04037\", \r\n\"gender\": \"M\", \r\n\"name_suffix\": \"\", \r\n\"sunlight_old_id\": \"fakeopenID319\", \r\n\"congresspedia_url\": \"http:\\\/\\\/www.sourcewatch.org\\\/index.php?title=David_Price\"}\r\n}}\r\n<\/pre>\r\n\r\n<h3>legislators.getList.xml?state=NY&title=Sen<\/h3>\r\n\r\n<pre>\r\n&lt;response&gt;\r\n  &lt;legislators&gt;\r\n    &lt;legislator&gt;\r\n        &lt;district&gt;Junior Seat&lt;\/district&gt;\r\n        &lt;title&gt;Sen&lt;\/title&gt;\r\n        &lt;eventful_id&gt;P0-001-000015656-6&lt;\/eventful_id&gt;\r\n        &lt;state&gt;NY&lt;\/state&gt;\r\n        &lt;votesmart_id&gt;55463&lt;\/votesmart_id&gt;\r\n        &lt;party&gt;D&lt;\/party&gt;\r\n        &lt;email\/&gt;\r\n        &lt;crp_id&gt;N00000019&lt;\/crp_id&gt;\r\n        &lt;website&gt;http:\/\/clinton.senate.gov\/&lt;\/website&gt;\r\n        &lt;fax&gt;202-228-0282&lt;\/fax&gt;\r\n        &lt;govtrack_id&gt;300022&lt;\/govtrack_id&gt;\r\n        &lt;firstname&gt;Hillary&lt;\/firstname&gt;\r\n        &lt;middlename&gt;Rodham&lt;\/middlename&gt;\r\n        &lt;lastname&gt;Clinton&lt;\/lastname&gt;\r\n        &lt;congress_office&gt;476 Russell Senate Office Building&lt;\/congress_office&gt;\r\n        &lt;bioguide_id&gt;C001041&lt;\/bioguide_id&gt;\r\n        &lt;webform&gt;http:\/\/clinton.senate.gov\/contact\/webform.cfm&lt;\/webform&gt;\r\n        &lt;nickname\/&gt;\r\n        &lt;phone&gt;202-224-4451&lt;\/phone&gt;\r\n        &lt;fec_id&gt;S0NY00188&lt;\/fec_id&gt;\r\n        &lt;gender&gt;F&lt;\/gender&gt;\r\n        &lt;name_suffix\/&gt;\r\n        &lt;sunlight_old_id&gt;fakeopenID456&lt;\/sunlight_old_id&gt;\r\n        &lt;congresspedia_url&gt;http:\/\/www.sourcewatch.org\/index.php?title=Hillary_Clinton&lt;\/congresspedia_url&gt;\r\n    &lt;\/legislator&gt;\r\n    &lt;legislator&gt;\r\n        &lt;district&gt;Senior Seat&lt;\/district&gt;\r\n        &lt;title&gt;Sen&lt;\/title&gt;\r\n        &lt;eventful_id&gt;P0-001-000016112-4&lt;\/eventful_id&gt;\r\n        &lt;state&gt;NY&lt;\/state&gt;\r\n        &lt;votesmart_id&gt;26976&lt;\/votesmart_id&gt;\r\n        &lt;party&gt;D&lt;\/party&gt;\r\n        &lt;email\/&gt;\r\n        &lt;crp_id&gt;N00001093&lt;\/crp_id&gt;\r\n        &lt;website&gt;http:\/\/schumer.senate.gov&lt;\/website&gt;\r\n        &lt;fax&gt;202-228-3027&lt;\/fax&gt;\r\n        &lt;govtrack_id&gt;300087&lt;\/govtrack_id&gt;\r\n        &lt;firstname&gt;Charles&lt;\/firstname&gt;\r\n        &lt;middlename&gt;E.&lt;\/middlename&gt;\r\n        &lt;lastname&gt;Schumer&lt;\/lastname&gt;\r\n        &lt;congress_office&gt;313 Hart Senate Office Building&lt;\/congress_office&gt;\r\n        &lt;bioguide_id&gt;S000148&lt;\/bioguide_id&gt;\r\n        &lt;webform&gt;\r\n        http:\/\/schumer.senate.gov\/SchumerWebsite\/contact\/webform.cfm\r\n        &lt;\/webform&gt;\r\n        &lt;nickname&gt;Chuck&lt;\/nickname&gt;\r\n        &lt;phone&gt;202-224-6542&lt;\/phone&gt;\r\n        &lt;fec_id&gt;S8NY00082&lt;\/fec_id&gt;\r\n        &lt;gender&gt;M&lt;\/gender&gt;\r\n        &lt;name_suffix\/&gt;\r\n        &lt;sunlight_old_id&gt;fakeopenID518&lt;\/sunlight_old_id&gt;\r\n        &lt;congresspedia_url&gt;http:\/\/www.sourcewatch.org\/index.php?title=Chuck_Schumer&lt;\/congresspedia_url&gt;\r\n    &lt;\/legislator&gt;\r\n  &lt;\/legislators&gt;\r\n&lt;\/response&gt;\r\n<\/pre>", "enable_comments": 0}}, {"pk": 2, "model": "flatpages.flatpage", "fields": {"registration_required": 0, "title": "Sunlight Labs API Transition Guide", "url": "\/api\/docs\/transition_guide\/", "template_name": "", "sites": [1], "content": "<h1>Sunlight Labs API Transition Guide<\/h1>\r\n\r\n<p>Those familiar with the old Sunlight Labs API may look at the new API and wonder if the drastically reduced method count means reduced functionality.  The new API only disposes of a few rarely used methods, and in fact introduces new functionality and flexibility that we think will make the new API more useful to practically all users.<\/p>\r\n<p>In addition, the data in the old API will no longer be actively maintained, whereas the new API has an automated update mechanism that ensures that the latest members of congress are available typically within a week of their election, often earlier.<\/p>\r\n<p>Because we encourage all users of the old API to update to the new API, we have provided this transition guide that explains how old methods map to new methods, and in the case where we did have to remove some functionality, where we recommend you go for similar data.<\/p>\r\n\r\n<h2>people methods<\/h2>\r\n<ul>\r\n<li><span=\"methodname\">people.convertId<\/span> - use legislators.get which returns all ids, and grab the id(s) that you need<\/li>\r\n<li><span=\"methodname\">people.getDataItem<\/span> - use legislators.get which returns all data, grab the data item(s) you need<\/li>\r\n<li><span=\"methodname\">people.getDataCondition<\/span> - use legislators.getList which returns all data on all legislators which match the condition, as opposed to just their id<\/li>\r\n<li><span=\"methodname\">people.getPersonInfo<\/span> - use legislators.get<\/li>\r\n<li><span=\"methodname\">people.getHCard<\/span> - no replacement in new API<\/li>\r\n<li><span=\"methodname\">people.reps.getRepFromDistrict<\/span> - use legislators.get?state=XX&district=YY<\/li>\r\n<li><span=\"methodname\">people.reps.getRepsFromCityState<\/span> - TODO<\/li>\r\n<li><span=\"methodname\">people.sens.getSensFromState<\/span> - use legislators.get?state=XX&title=Sen<\/li>\r\n<\/ul>\r\n\r\nIn addition, the specific parameters that varied across the people-related methods have all been standardized:\r\n\r\n<table>\r\n<tr><th>Old API<\/th><th>New API<\/th><\/tr>\r\n<tr><td>state_full_name<\/td><td>removed, use state<\/td><\/tr>\r\n<tr><td>member110congress<\/td><td>use current_member<\/td><\/tr>\r\n<tr><td>senator_class<\/td><td>removed<\/td><\/tr>\r\n<tr><td>photo<\/td><td>see <a href=\"\/api\/docs\/#photos\"><\/td><\/tr>\r\n<tr><td>state_abbreviation<\/td><td>state<\/td><\/tr>\r\n<tr><td>URL<\/td><td>website<\/td><\/tr>\r\n<tr><td>CRPcandId<\/td><td>crp_id<\/td><\/tr>\r\n<tr><td>WashPost_ID<\/td><td>bioguide_id<\/td><\/tr>\r\n<tr><td> BioGuide_ID<\/td><td>bioguide_id<\/td><\/tr>\r\n<tr><td>VoteSmart_ID<\/td><td>votesmart_id<\/td><\/tr>\r\n<tr><td>FEC_ID<\/td><td>fec_id<\/td><\/tr>\r\n<tr><td>congresspedia<\/td><td>congresspedia_url<\/td><\/tr>\r\n<tr><td>Eventful_ID<\/td><td>eventful_id<\/td><\/tr>\r\n<tr><td>GovTrack_ID<\/td><td>govtrack_id<\/td><\/tr>\r\n<tr><td>entity_id<\/td><td>sunlight_old_id<\/td><\/tr>\r\n<\/table>\r\n\r\nThere is no longer a unique ID introduced by the Sunlight API, the sunlight_old_id is provided for those which had entity_ids in the new API but  no more will be assigned and the use of the fakeopenID is discouraged.  We recommend using the BioGuide ID as it is the most authoritative standard identifier presently available.\r\n\r\n<h2>state methods<\/h2>\r\n\r\n<p>Both state related methods (states.getAbbreviationFromName and states.getNameFromAbbreviation) were infrequently used and unnecessary.  It is not wise to use a webservice to do this conversion as it is trivial to obtain a table of this data and store it within the application without the repeated overhead of making an HTTP request.<\/p>\r\n\r\n<h2>places methods<\/h2>\r\n\r\nA fair number of methods were removed from the places-related methods, but everything related to districts has been preserved as these were the only methods that saw any real usage and for which we are reasonably confident about the sources of our data.\r\n\r\n<ul>\r\n<li><span=\"methodname\">places.getCityStateFromZip<\/span> - removed<\/li>\r\n<li><span=\"methodname\">places.getDistrictFromAddress<\/span> - use google\/yahoo\/geocoder.us to get lat\/long and then call districts.getDistrictFromLatLong<\/li>\r\n<li><span=\"methodname\">places.getDistrictsFromZip<\/span> - districts.", "enable_comments": 0}}]
